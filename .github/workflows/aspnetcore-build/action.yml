name: ASP.NET Core Build
description: Build an ASP.NET Core application
inputs:
  project_name:
    required: true
  full_solution_build: 
    required: false
    default: true
  ado_token:
    required: false
    default: ''
  package_pat: 
    required: false
    default: ''
  nuget_feed_name: 
    required: false
    default: 'UWHealth'
  nuget_feed_source: 
    required: false
    default: 'https://pkgs.dev.azure.com/uwhealth/_packaging/UWHealth_Package_Feed_Updated/nuget/v3/index.json'
  telerik_feed_name: 
    required: false
    type: string
    default: 'Telerik'
  telerik_feed_source:
    required: false
    type: string
    default: 'https://nuget.telerik.com/v3/index.json'
  nuget_config: 
    required: false
    default: 'Nuget.config'
  telerik_user: 
    required: false
    default: ''
  telerik_password: 
    required: false
    default: ''
    
runs:
  using: "composite"
  steps:   
    - name: Initialize cache
      id: nuget-cache
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

    - name: Remove and Update UW Health Azure DevOps NuGet feed
      if: ${{ inputs.ado_token != ''}}
      shell: bash
      run: |
        dotnet nuget remove source ${{ inputs.nuget_feed_name }} --configfile ${{ inputs.nuget_config }}
        dotnet nuget add source ${{ inputs.nuget_feed_source }} -n ${{ inputs.nuget_feed_name }} -u az -p ${{ inputs.ado_token }} --configfile ${{ inputs.nuget_config }} --store-password-in-clear-text

    - name: Remove and Update Telerik NuGet feed
      if: ${{ inputs.telerik_user != ''}}
      shell: bash
      run: | 
        dotnet nuget remove source ${{ inputs.telerik_feed_name }} --configfile ${{ inputs.nuget_config }}
        dotnet nuget add source ${{ inputs.telerik_feed_source }} -n ${{ inputs.telerik_feed_name }} -u ${{ inputs.telerik_user }} -p ${{ inputs.telerik_password }} --configfile ${{ inputs.nuget_config }} --store-password-in-clear-text

    - name: Restore NuGet packages (if not cached)
      shell: bash
      run: dotnet restore --configfile ${{ inputs.nuget_config }}
        
    - name: Full Solution Build
      shell: bash
      run: dotnet build --configuration Release --no-restore
      if: ${{ inputs.full_solution_build == 'true' }}

    - name: Project Level Build
      shell: bash
      run: |
        cd ${{ inputs.project_name }}
        dotnet build --configuration Release --no-restore
      if: ${{ inputs.full_solution_build == 'false' }} 

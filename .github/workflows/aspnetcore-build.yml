name: ASP.NET Core Build & Test

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string     
    secrets:
      ado_token:
        required: true
      sonar_token:
        required: true
        
jobs:
  BuildTest:     
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:      
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout actions repository
      uses: actions/checkout@v3
      with:
        repository: uwhealth-is/actions
        path: ./.github/uwh-actions 
        
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
      
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
      
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
      
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path ./.sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Initialize SonarScanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"${{ inputs.project_name }}-UWHealth-is" /o:"uwhealth-is" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions="**/*.bin,**/obj/**,**/wwwroot/dist/**,**/wwwroot/lib/**,**/Migrations/**/*" /d:sonar.coverage.exclusions="**/Startup.cs,**/Program.cs,**/wwwroot/**/*.js,**/*Tests.cs" /d:sonar.cs.cobertura.reportsPaths="**/coverage.cobertura.xml" 
        
    - name: Run dotnet build
      uses: ./.github/uwh-actions/.github/workflows/aspnetcore-build
      with:
        project_name: ${{ inputs.project_name }}
        ado_token: ${{ secrets.ado_token }}
                
    - name: Run dotnet test
      shell: pwsh
      run: dotnet test --logger trx --results-directory TestResults -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput=coverage -p:ExcludeByFile=**/Views/**/* -p:Exclude=[*]*.Migrations.*
    
    - name: End SonarScanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"      

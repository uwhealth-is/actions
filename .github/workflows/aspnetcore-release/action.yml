name: ASP.NET Core Release

inputs:
  project_name:
    required: true
  github_token:
    required: true

runs:
  using: "composite"
  steps: 
    - name: Checkout actions repository
      uses: actions/checkout@v3
      with:
        repository: uwhealth-is/actions
        path: ./.github/uwh-actions
      
    - name: Download build Artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact
                    
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }} # This token is provided by Actions, you do not need to create your own token
#      with:
#        tag_name: ${{ github.ref_name }}.${{ github.run_id }}
#        release_name: ${{ github.ref_name }}.${{ github.run_id }}
#        draft: true
#        prerelease: false
#    
#    - name: Upload Build Release Assets
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}  
#        asset_path: ${{ github.workspace }}/artifact.zip
#        asset_name: artifact.zip
#        asset_content_type: application/zip
#      if: success()
#          
#    - name: Upload Migration Release Asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}  
#        asset_path: ${{ github.workspace }}/efmigrations.sql
#        asset_name: efmigrations.sql
#        asset_content_type: application/sql
#      if: ${{ success() && hashFiles(format('{0}/efmigrations.sql', github.workspace)) != '' }}
#
#    - name: Upload Reports Release Asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}  
#        asset_path: ${{ github.workspace }}/reports.zip
#        asset_name: reports.zip
#        asset_content_type: application/zip
#      if: ${{ success() && hashFiles(format('{0}/reports.zip', github.workspace)) != '' }}
#
#    - name: Upload Procedures Release Asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}  
#        asset_path: ${{ github.workspace }}/procedures.zip
#        asset_name: procedures.zip
#        asset_content_type: application/zip
#      if: ${{ success() && hashFiles(format('{0}/procedures.zip', github.workspace)) != '' }}
#            
#    - name: Mark Release as published
#      if: success()
#      uses: eregon/publish-release@v1
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      with:
#        release_id: ${{ steps.create_release.outputs.id }}
        
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
        
    - name: Install dependencies
      shell: bash
      run: npx semantic-release
      
    - name: Install semantic-release extra plugins
      shell: bash
      run: npm install --save-dev @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/git      

    - name: Release
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: npx semantic-release

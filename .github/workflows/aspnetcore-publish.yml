name: ASP.NET Core Build and Publish

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      pipeline_name:
        required: false
        type: string
        default: ${{ inputs.project_name }}
      nuget_feed_name: 
        required: false
        type: string
        default: 'UWHealth'
      nuget_feed_source: 
        required: false
        type: string
        default: 'https://pkgs.dev.azure.com/uwhealth/_packaging/UWHealth_Package_Feed_Updated/nuget/v3/index.json'
      telerik_feed_name: 
        required: false
        type: string
        default: 'Telerik'
      telerik_feed_source:
        required: false
        type: string
        default: 'https://nuget.telerik.com/v3/index.json'
      nuget_config: 
        required: false
        type: string
        default: 'Nuget.config'
    secrets:
      ado_token:
        required: true
      package_pat:
        required: true
      telerik_user: 
        required: false
      telerik_password: 
        required: false

jobs:
  BuildAndPublish:     
    name: BuildAndPublish
    runs-on: ubuntu-latest
    permissions: write-all
    
    steps:      
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout actions repository
      uses: actions/checkout@v3
      with:
        repository: uwhealth-is/actions
        path: ./.github/uwh-actions 
		
    - name: Run dotnet build
      uses: ./.github/uwh-actions/.github/workflows/aspnetcore-build
      with:
        project_name: ${{ inputs.project_name }}
        package_pat: ${{ secrets.PACKAGE_PAT }}
        telerik_user: ${{ secrets.telerik_user }}
        telerik_password: ${{ secrets.telerik_user }}
        full_solution_build: false

    - name: Restore client side packages
      shell: bash
      run: | 
        cd ${{ inputs.project_name }}
        npm config set @uwhealth-is:registry=https://npm.pkg.github.com/
        npm config set //npm.pkg.github.com/:_authToken=${{ secrets.package_pat }}
        npm install
        npm i --location=global grunt
        grunt
      
    - name: dotnet publish
      shell: bash
      run: |
        cd ${{ inputs.project_name }}
        dotnet publish --configuration Release -o ${{ github.workspace }}/publish
         
    - name: zip publish files
      shell: bash
      run: |
        pushd ${{ github.workspace }}/publish
        zip -r ${{ github.workspace }}/artifact.zip ./
        popd
    
    - name: Upload Build Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ${{ github.workspace }}/artifact.zip
              
   
   

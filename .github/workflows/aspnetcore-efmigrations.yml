name: ASP.NET Core Ef Migrations

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
    secrets: 
      ado_token:
        required: true
      telerik_user: 
        required: false
      telerik_password: 
        required: false

jobs:
  efigrations:     
    name: Entity Framework Migrations Script Creation
    runs-on: ubuntu-latest
    permissions: write-all
    
    steps:      
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Check for Azure Devops token to determine if telerik is needed in nuget feed
      id: azuredevops
      shell: bash
      run: echo '::set-output name=ado_secret::${{secrets.ado_token}}'

    - name: Update azure devops Nuget.Config entry
      shell: bash
      run: |
        dotnet nuget remove source ${{ inputs.nuget_feed_name }} --configfile ${{ inputs.nuget_config }}
        dotnet nuget add source ${{ inputs.nuget_feed_source }} -n ${{ inputs.nuget_feed_name }} -u az -p ${{ secrets.ado_token }} --configfile ${{ inputs.nuget_config }} --store-password-in-clear-text
      if: steps.azuredevops.outputs.ado_secret != ''

    - name: Check for Telerik Info to determine if telerik is needed in nuget feed
      id: telerik
      shell: bash
      run: echo '::set-output name=telerik_secret::${{secrets.telerik_password}}'

    - name: Update Telerik Nuget.Config entry
      shell: bash
      run: | 
        dotnet nuget remove source ${{ inputs.telerik_feed_name }} --configfile ${{ inputs.nuget_config }}
        dotnet nuget add source ${{ inputs.telerik_feed_source }} -n ${{ inputs.telerik_feed_name }} -u ${{ secrets.telerik_user }} -p ${{ secrets.telerik_password }} --configfile ${{ inputs.nuget_config }} --store-password-in-clear-text
      if: steps.telerik.outputs.telerik_secret != ''

    - name: Install entity framework tool
      shell: bash
      run: dotnet tool install --global dotnet-ef --ignore-failed-sources
       
    - name: Create entity framework migrations sql script
      shell: bash
      run: dotnet ef migrations script --idempotent --configuration Release --project ${{ inputs.project_name }} --output ${{ github.workspace }}/publish/efmigrations.sql
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: artifact
        path: ${{ github.workspace }}/publish/efmigrations.sql


